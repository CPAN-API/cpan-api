---
# Use the latest 2.1 version of CircleCI pipeline process engine. See:
# https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Orchestrate or schedule a set of jobs
workflows:
  docker-compose:
    jobs:
      - build-and-test
jobs:
  build-and-test:
    machine: true
    resource_class: medium
    steps:
      - run:
          name: docker-compose version
          command: docker-compose --version
      - run:
          command: |
            git clone https://github.com/metacpan/metacpan-docker.git
            cd metacpan-docker
          name: metacpan-docker checkout
      - checkout:
          path: metacpan-docker/src/metacpan-api
      - run:
          command: |
            pushd metacpan-docker
            ./bin/metacpan-docker init
          name: clone missing repositories
      - run:
          command: |
            pushd metacpan-docker
            docker-compose build --build-arg CPM_ARGS='--with-test' api_test
          name: compose build
      - run:
          command: |
            pushd metacpan-docker
            ./bin/metacpan-docker init
            docker-compose --verbose up -d api_test
          name: compose up
      # Since we're running docker-compose -d, we don't actually know if
      # Elasticsearch is available at the time this build step begins. We
      # probably need to wait for it here, so we'll add our own check.
      - run:
          command: |
            pushd metacpan-docker
            ./src/metacpan-api/wait-for-es.sh http://localhost:9200 elasticsearch_test --
          name: wait for ES
      - run:
          command: |
            pushd metacpan-docker
            docker-compose exec -T api_test cpm install -g Devel::Cover Devel::Cover::Report::Codecov Devel::Cover::Report::Codecovbash
          name: install Devel::Cover
      - run:
          command: |
            pushd metacpan-docker
            docker-compose exec -T api_test env HARNESS_PERL_SWITCHES=-MDevel::Cover prove -lr --jobs 2 t
          name: run tests with coverage
      - run:
          command: |
            pushd metacpan-docker
            docker-compose exec -T api_test cover
          name: generate coverage report
      - run:
          command: |
            pushd metacpan-docker
            docker-compose exec -T api_test cover -report codecov
          name: upload coverage report
      - run:
          command: |
            pushd metacpan-docker
            docker-compose logs
            docker stats --no-stream
            docker ps -a | head
          name: docker-compose logs
          when: on_fail
